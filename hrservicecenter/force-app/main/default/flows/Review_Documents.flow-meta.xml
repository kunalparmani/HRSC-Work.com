<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>SendEmail</name>
        <label>SendEmail</label>
        <locationX>176</locationX>
        <locationY>638</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <connector>
            <targetReference>ConfirmationPage</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>EmailBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailAddressesArray</name>
            <value>
                <elementReference>EmailsCollection</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>[Sample] {!GetEmployeeRecords.FirstName} {!GetEmployeeRecords.LastName} has reviewed onboarding documents.</stringValue>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>51.0</apiVersion>
    <assignments>
        <name>AddEmails</name>
        <label>AddEmails</label>
        <locationX>176</locationX>
        <locationY>398</locationY>
        <assignmentItems>
            <assignToReference>EmailsCollection</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>GetEmployeeRecords.Email</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>EmailsCollection</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>GetEmployeeRecords.Manager.Email</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>EmailsCollection</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>GetEmployeeRecords.Owner:User.Email</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Review_Documents</targetReference>
        </connector>
    </assignments>
    <constants>
        <name>OpenNewBrowserIcon</name>
        <dataType>String</dataType>
        <value>
            <stringValue>&lt;img src=&apos;/resource/wkdw__Open_new_browser_icon?&apos; /&gt;</stringValue>
        </value>
    </constants>
    <formulas>
        <name>IAgree</name>
        <dataType>Boolean</dataType>
        <expression>{!Checkbox1} = FALSE</expression>
    </formulas>
    <interviewLabel>Review Documents {!$Flow.CurrentDateTime}</interviewLabel>
    <isTemplate>true</isTemplate>
    <label>Review Documents</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>Get_Task</name>
        <label>Get Task</label>
        <locationX>176</locationX>
        <locationY>158</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetEmployeeRecords</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>taskId</elementReference>
            </value>
        </filters>
        <filters>
            <field>OwnerId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetEmployeeRecords</name>
        <label>GetEmployeeRecords</label>
        <locationX>176</locationX>
        <locationY>278</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AddEmails</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>UserId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Employee</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Task</name>
        <label>Update Task</label>
        <locationX>176</locationX>
        <locationY>878</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>taskId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </inputAssignments>
        <object>Task</object>
    </recordUpdates>
    <runInMode>SystemModeWithoutSharing</runInMode>
    <screens>
        <name>ConfirmationPage</name>
        <label>ConfirmationPage</label>
        <locationX>176</locationX>
        <locationY>758</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Update_Task</targetReference>
        </connector>
        <fields>
            <name>Confirmation_Page_Content</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;[Sample] An email has been sent to you and your manager.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Navigation_Buttons</name>
            <extensionName>c:flowNavigationButtons</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>labelMarkTaskAsComplete</name>
                <value>
                    <elementReference>$Label.wkdw__form_button_mark_task_as_completed</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Get_Task.Status</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Completed</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Review_Documents</name>
        <label>Review Documents</label>
        <locationX>176</locationX>
        <locationY>518</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>SendEmail</targetReference>
        </connector>
        <fields>
            <name>HeaderTop</name>
            <fieldText>&lt;p&gt;About Us&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Body1</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);&quot;&gt;[Sample] &lt;/span&gt;&lt;a href=&quot;https://salesforce.com/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;Company history&lt;/a&gt;&lt;/p&gt;&lt;p&gt;[Sample] Please take some time to familiarize yourself with our company history.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Checkbox1</name>
            <dataType>Boolean</dataType>
            <fieldText>Got it!</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;You need to agree to submit.&lt;/p&gt;</errorMessage>
                <formulaExpression>{!Checkbox1} = TRUE</formulaExpression>
            </validationRule>
        </fields>
        <fields>
            <name>Body2</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt;[Sample] &lt;/span&gt;&lt;a href=&quot;https://salesforce.com/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;Company holidays&lt;/a&gt;&lt;/p&gt;&lt;p&gt;[Sample] Plan ahead for your vacations.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Checkbox2</name>
            <dataType>Boolean</dataType>
            <fieldText>Got it!</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;You need to agree to submit.&lt;/p&gt;</errorMessage>
                <formulaExpression>{!Checkbox2} = TRUE</formulaExpression>
            </validationRule>
        </fields>
        <fields>
            <name>Body3</name>
            <fieldText>&lt;p&gt;[Sample] Click Submit and we’ll send you and your manager an email confirming your review of this information.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Navigation</name>
            <extensionName>c:flowNavigationButtons</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>labelNext</name>
                <value>
                    <elementReference>$Label.wkdw__form_button_submit</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Task</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>EmailBody</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;[Sample] {!GetEmployeeRecords.FirstName} {!GetEmployeeRecords.LastName}&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 14px;&quot;&gt; &lt;/span&gt;has confirmed that they have read &lt;span style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt;Company history &lt;/span&gt;and Company holidays documents.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;[Sample] Here’s the information that was provided on the screen.&amp;nbsp;&lt;/p&gt;&lt;p&gt;{!Body1}&lt;/p&gt;&lt;p&gt;{!Body2}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;[Sample]This email was sent by an automated process from the onboarding flow Review_Documents.&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>EmailsCollection</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>taskId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
